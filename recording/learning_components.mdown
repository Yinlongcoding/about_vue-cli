### 热身组件
在项目开始前，先写一个打招呼的组件热热身吧，熟悉一下玩法 `[注] *为特殊说明`  
此处参考自[WiseWrong的博客](http://www.cnblogs.com/wisewrong/p/6266038.html)，这位前辈讲的很详细  
`src` 目录下 `components` 下创建一个`header.vue`& `login.vue`开启第一次尝试吧

header.vue
```
<template>
  <header class="header">
    <h1 class="logo">{{ nameLogo }}</h1> 
    <ul>
      <li v-for="nav in navs">{{ nav.li }}</li>
    </ul>
  </header>
</template>

<script>
  export default {         *
    name:'headiv',         *
    props: ['nameLogo'],   *
    data () {              *
      return {
        navs: [
          {name: '主页'},
          {name: '单词'},
          {name: '音标'},
          {name: '例句'},
          {name: '发音'}
        ]
      }
    }
  }
</script>

<style>                   *
  .header {
    width: 100%;
    display: flex;
    justify-content: space-between; 
  }
  .header h1 {
    font-size: 1.5em;
    color: #eac;
  }
  .header ul {
    list-style: none;
    display: flex;
  }
  .header ul li {
    padding-left: 1em;
  }
</style>
```

login.vue
```
<template>
    <div class="login">
        <input v-model="userName" @change="setName">    *
    </div>
</template>

<script>
  export default {         
    name: 'login',                                      
    data () {
      return {
        userName: ''                        
      }
    },
    methods: {     
      setName: function () {   *
        `this.$emit('changeUser', this.userName)`      
      }
    }
  }
</script>
```

App.vue
```
<template>
  <div id="app">
    <headiv :nameLogo="user"></headiv>        
    <login @changeUser="getUser"></login>   
    <p>用户名：{{ user }}</p>       
  </div>
</template>

<script>
import headiv from './components/header'     *
import login from './components/login.vue'

export default {
  name: 'app',
  data () {
    return {
      user: ''
    }
  },
  components: {
    headiv,
    login
  },
  methods: {
    getUser(msg) {
      this.user = msg                        *
    }
  }
}
</script>
```

* export default ES6语法，用于导出变量，函数，module ... 
* name 可选，定义模块的标签名，[注]避免使用HTML原生标签名以及一些保留词
* [props](https://cn.vuejs.org/v2/guide/components.html#Prop) 父组件向子组件传值 -- 父组件bind 其属性并赋值，然后传入子组件
* data , vue中data是一个函数，所有的值皆为返回值
* v-model， 双向绑定，input触发onchange事件时，将新的 user 通过双向绑定传给$data.user，随之p标签内容发生改变
* $emit 触发事件时将数据返回给 callbackFn-> setUser, changeUser可认为是一个自定义的时间，目的就是传送数据到父组件，getUser()将数据接收